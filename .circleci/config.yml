version: 2.0

workspace: &workspace
  ~/mobile-app

config_android: &config_android
  docker:
    - image: circleci/android:api-28-alpha
  working_directory: *workspace
  environment:
    # https://blogs.oracle.com/java-platform-group/java-se-support-for-docker-cpu-and-memory-limits
    JAVA_TOOL_OPTIONS: "-Xmx1024m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dkotlin.incremental=false"

gen_cache_key: &gen_cache_key
  run:
    name: Generate cache key
    command: ./util/checksum.sh /tmp/checksum.txt

restore_cache: &restore_cache
  restore_cache:
    key: gradle-{{ checksum "/tmp/checksum.txt" }}

save_cache: &save_cache
  save_cache:
    paths:
      - ~/.gradle/caches
      - ~/.gradle/wrapper
    key: gradle-{{ checksum "/tmp/checksum.txt" }}

attach_workspace: &attach_workspace
  attach_workspace:
    at: *workspace

persist_workspace: &persist_workspace
  persist_to_workspace:
    root: *workspace
    paths:
      - ./*/build

decrypt_encrypted: &decrypt_encrypted
  run:
    name: Decrypt encrypted files
    command: util/encrypted/decrypt.sh $ENCRYPT_KEY

cleanup_decrypted: &cleanup_decrypted
  run:
    name: Cleanup encrypted files
    command: util/encrypted/cleanup.sh

jobs:
  build_debug:
    <<: *config_android
    steps:
      - checkout
      - <<: *gen_cache_key
      - <<: *restore_cache
      - <<: *decrypt_encrypted
      - run:
          name: Download dependencies
          command: ./gradlew dependencies
      - run:
          name: Assemble debug apk
          command: ./gradlew assembleDebug
      - <<: *cleanup_decrypted
      - <<: *save_cache
      - store_artifacts:
          path: app/build/outputs
          destination: outputs
      - <<: *persist_workspace

  check:
    <<: *config_android
    steps:
      - checkout
      - <<: *attach_workspace
      - <<: *gen_cache_key
      - <<: *restore_cache
      - <<: *decrypt_encrypted
      - run:
          name: Check app and dependencies
          command: ./gradlew check dependencyUpdates
      - <<: *cleanup_decrypted
      - store_artifacts:
          path: app/build/reports
          destination: reportsApp
      - store_artifacts:
          path: data/build/reports
          destination: reportsData
      - store_artifacts:
          path: domain/build/reports
          destination: reportsDomain
      - store_artifacts:
          path: build/dependencyUpdates
          destination: dependencyUpdates

  build_staging_for_crashlytics:
    <<: *config_android
    steps:
      - checkout
      - <<: *attach_workspace
      - <<: *gen_cache_key
      - <<: *restore_cache
      - <<: *decrypt_encrypted
      - run:
          name: Assemble staging apk
          command: ./gradlew clean assembleStaging -PVERSION_CODE=$CIRCLE_BUILD_NUM -PIS_USER_BUILD=true
      - run:
          name: Send staging apk to Crashlytics
          command: ./gradlew crashlyticsUploadDistributionStaging -PVERSION_CODE=$CIRCLE_BUILD_NUM -PIS_USER_BUILD=true
      - <<: *cleanup_decrypted
      - store_artifacts:
          path: app/build/outputs
          destination: outputs
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - <<: *persist_workspace

  # build_release_for_play_store:
  #   <<: *config_android
  #   steps:
  #     - checkout
  #     - <<: *gen_cache_key
  #     - <<: *restore_cache
  #     - <<: *attach_workspace
  #     - <<: *decrypt_encrypted
  #     - run:
  #       name: Build release bundle
  #       command: ./gradlew bundleRelease
  #     - run:
  #         name: Deploy to Alpha channel
  #         command: ./gradlew publishRelease
  #     - <<: *cleanup_decrypted

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_debug
      - check:
          requires:
            - build_debug
      - build_staging_for_crashlytics:
          requires:
            - check
          filters:
            branches:
              only: master
      # - build_release_for_play_store:
      #     requires:
      #       - check
      #     filters:
      #       tags:
      #         only: /^v.*/
      #       branches:
      #         ignore: /.*/